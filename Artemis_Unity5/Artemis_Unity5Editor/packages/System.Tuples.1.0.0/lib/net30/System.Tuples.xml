<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Tuples</name>
    </assembly>
    <members>
        <member name="T:System.Tuples.Tuple">
            <summary>
            Tuple utility class. This class does not represent a zero-tuple, but is used
            for creating new tuples with the New method or converting lists to tuples using
            the ToTuple method
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple.New``1(``0)">
            <summary>
            Creates a new tuple of length 1 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <returns>Tuple of length 1 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``2(``0,``1)">
            <summary>
            Creates a new tuple of length 2 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <returns>Tuple of length 2 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 3 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <returns>Tuple of length 3 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 4 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <returns>Tuple of length 4 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 5 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <returns>Tuple of length 5 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 6 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <typeparam name="T6">Type of the new Element6</typeparam>
            <param name="t6">Value of the new Element6</param>
            <returns>Tuple of length 6 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 7 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <typeparam name="T6">Type of the new Element6</typeparam>
            <param name="t6">Value of the new Element6</param>
            <typeparam name="T7">Type of the new Element7</typeparam>
            <param name="t7">Value of the new Element7</param>
            <returns>Tuple of length 7 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new tuple of length 8 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <typeparam name="T6">Type of the new Element6</typeparam>
            <param name="t6">Value of the new Element6</param>
            <typeparam name="T7">Type of the new Element7</typeparam>
            <param name="t7">Value of the new Element7</param>
            <typeparam name="T8">Type of the new Element8</typeparam>
            <param name="t8">Value of the new Element8</param>
            <returns>Tuple of length 8 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates a new tuple of length 9 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <typeparam name="T6">Type of the new Element6</typeparam>
            <param name="t6">Value of the new Element6</param>
            <typeparam name="T7">Type of the new Element7</typeparam>
            <param name="t7">Value of the new Element7</param>
            <typeparam name="T8">Type of the new Element8</typeparam>
            <param name="t8">Value of the new Element8</param>
            <typeparam name="T9">Type of the new Element9</typeparam>
            <param name="t9">Value of the new Element9</param>
            <returns>Tuple of length 9 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.New``10(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Creates a new tuple of length 10 containing the passed values.
            </summary>
            <typeparam name="T1">Type of the new Element1</typeparam>
            <param name="t1">Value of the new Element1</param>
            <typeparam name="T2">Type of the new Element2</typeparam>
            <param name="t2">Value of the new Element2</param>
            <typeparam name="T3">Type of the new Element3</typeparam>
            <param name="t3">Value of the new Element3</param>
            <typeparam name="T4">Type of the new Element4</typeparam>
            <param name="t4">Value of the new Element4</param>
            <typeparam name="T5">Type of the new Element5</typeparam>
            <param name="t5">Value of the new Element5</param>
            <typeparam name="T6">Type of the new Element6</typeparam>
            <param name="t6">Value of the new Element6</param>
            <typeparam name="T7">Type of the new Element7</typeparam>
            <param name="t7">Value of the new Element7</param>
            <typeparam name="T8">Type of the new Element8</typeparam>
            <param name="t8">Value of the new Element8</param>
            <typeparam name="T9">Type of the new Element9</typeparam>
            <param name="t9">Value of the new Element9</param>
            <typeparam name="T10">Type of the new Element10</typeparam>
            <param name="t10">Value of the new Element10</param>
            <returns>Tuple of length 10 containing the values passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``1(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 1 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 1 elements.</param>
            <returns>Tuple of length 1 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``2(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 2 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 2 elements.</param>
            <returns>Tuple of length 2 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``3(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 3 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 3 elements.</param>
            <returns>Tuple of length 3 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``4(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 4 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 4 elements.</param>
            <returns>Tuple of length 4 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``5(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 5 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 5 elements.</param>
            <returns>Tuple of length 5 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``6(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 6 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <typeparam name="T6">Type of the new Element6. Enumerable must have an object of the same type at position 6</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 6 elements.</param>
            <returns>Tuple of length 6 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``7(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 7 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <typeparam name="T6">Type of the new Element6. Enumerable must have an object of the same type at position 6</typeparam>
            <typeparam name="T7">Type of the new Element7. Enumerable must have an object of the same type at position 7</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 7 elements.</param>
            <returns>Tuple of length 7 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``8(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 8 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <typeparam name="T6">Type of the new Element6. Enumerable must have an object of the same type at position 6</typeparam>
            <typeparam name="T7">Type of the new Element7. Enumerable must have an object of the same type at position 7</typeparam>
            <typeparam name="T8">Type of the new Element8. Enumerable must have an object of the same type at position 8</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 8 elements.</param>
            <returns>Tuple of length 8 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``9(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 9 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <typeparam name="T6">Type of the new Element6. Enumerable must have an object of the same type at position 6</typeparam>
            <typeparam name="T7">Type of the new Element7. Enumerable must have an object of the same type at position 7</typeparam>
            <typeparam name="T8">Type of the new Element8. Enumerable must have an object of the same type at position 8</typeparam>
            <typeparam name="T9">Type of the new Element9. Enumerable must have an object of the same type at position 9</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 9 elements.</param>
            <returns>Tuple of length 9 that contains values from the enumerable.</returns>
        </member>
        <member name="M:System.Tuples.Tuple.ToTuple``10(System.Collections.IEnumerable)">
            <summary>
            Creates a tuple of length 10 by taking values from the enumerable passed in.
            </summary>
            <typeparam name="T1">Type of the new Element1. Enumerable must have an object of the same type at position 1</typeparam>
            <typeparam name="T2">Type of the new Element2. Enumerable must have an object of the same type at position 2</typeparam>
            <typeparam name="T3">Type of the new Element3. Enumerable must have an object of the same type at position 3</typeparam>
            <typeparam name="T4">Type of the new Element4. Enumerable must have an object of the same type at position 4</typeparam>
            <typeparam name="T5">Type of the new Element5. Enumerable must have an object of the same type at position 5</typeparam>
            <typeparam name="T6">Type of the new Element6. Enumerable must have an object of the same type at position 6</typeparam>
            <typeparam name="T7">Type of the new Element7. Enumerable must have an object of the same type at position 7</typeparam>
            <typeparam name="T8">Type of the new Element8. Enumerable must have an object of the same type at position 8</typeparam>
            <typeparam name="T9">Type of the new Element9. Enumerable must have an object of the same type at position 9</typeparam>
            <typeparam name="T10">Type of the new Element10. Enumerable must have an object of the same type at position 10</typeparam>
            <param name="pList">The Enumerable form which to take the new tuple elements. Should have at least 10 elements.</param>
            <returns>Tuple of length 10 that contains values from the enumerable.</returns>
        </member>
        <member name="T:System.Tuples.Tuple`1">
            <summary>
            Represents a tuple of length 1
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`1.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`1.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``1(``0)">
            <summary>
            Creates a new tuple of length 2 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 2 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 3 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 3 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 4 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 4 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 5 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 5 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 6 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 6 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="t2">Value of the new tuple's Element2</param>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 2 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 2 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 3 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 3 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 4 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 5 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 6 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="t6">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="t6">Value of the new tuple's Element5</param>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <param name="t7">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="t6">Value of the new tuple's Element5</param>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <param name="t7">Value of the new tuple's Element6</param>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <param name="t8">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="t6">Value of the new tuple's Element5</param>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <param name="t7">Value of the new tuple's Element6</param>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <param name="t8">Value of the new tuple's Element7</param>
            <typeparam name="T9">Type of the new tuple's Element8</typeparam>
            <param name="t9">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="t2">Value of the new tuple's Element1</param>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="t3">Value of the new tuple's Element2</param>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="t4">Value of the new tuple's Element3</param>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="t5">Value of the new tuple's Element4</param>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="t6">Value of the new tuple's Element5</param>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <param name="t7">Value of the new tuple's Element6</param>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <param name="t8">Value of the new tuple's Element7</param>
            <typeparam name="T9">Type of the new tuple's Element8</typeparam>
            <param name="t9">Value of the new tuple's Element8</param>
            <typeparam name="T10">Type of the new tuple's Element9</typeparam>
            <param name="t10">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 2 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 2 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 3 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 3 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 4 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 4 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 5 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 5 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 6 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be appended.</param>
            <returns>A new tuple of length 6 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``8(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 8 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Append``9(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element2</typeparam>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 9 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 2 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 2 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 3 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 3 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 4 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 5 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 6 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be prepended.</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``8(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <typeparam name="T9">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 8 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Prepend``9(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T2">Type of the new tuple's Element1</typeparam>
            <typeparam name="T3">Type of the new tuple's Element2</typeparam>
            <typeparam name="T4">Type of the new tuple's Element3</typeparam>
            <typeparam name="T5">Type of the new tuple's Element4</typeparam>
            <typeparam name="T6">Type of the new tuple's Element5</typeparam>
            <typeparam name="T7">Type of the new tuple's Element6</typeparam>
            <typeparam name="T8">Type of the new tuple's Element7</typeparam>
            <typeparam name="T9">Type of the new tuple's Element8</typeparam>
            <typeparam name="T10">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 9 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.Equals(System.Tuples.Tuple{`0})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 1 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.CompareTo(System.Tuples.Tuple{`0})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.op_Equality(System.Tuples.Tuple{`0},System.Tuples.Tuple{`0})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`1.op_Inequality(System.Tuples.Tuple{`0},System.Tuples.Tuple{`0})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`1.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`1.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`1.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`1.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`1.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`2">
            <summary>
            Represents a tuple of length 2
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`2.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`2.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`2.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``1(``0)">
            <summary>
            Creates a new tuple of length 3 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 3 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 4 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 4 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 5 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 5 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 6 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 6 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="t3">Value of the new tuple's Element3</param>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 3 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 3 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 4 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 5 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 6 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="t6">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="t6">Value of the new tuple's Element4</param>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <param name="t7">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="t6">Value of the new tuple's Element4</param>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <param name="t7">Value of the new tuple's Element5</param>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <param name="t8">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="t6">Value of the new tuple's Element4</param>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <param name="t7">Value of the new tuple's Element5</param>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <param name="t8">Value of the new tuple's Element6</param>
            <typeparam name="T9">Type of the new tuple's Element7</typeparam>
            <param name="t9">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="t3">Value of the new tuple's Element1</param>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="t4">Value of the new tuple's Element2</param>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="t5">Value of the new tuple's Element3</param>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="t6">Value of the new tuple's Element4</param>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <param name="t7">Value of the new tuple's Element5</param>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <param name="t8">Value of the new tuple's Element6</param>
            <typeparam name="T9">Type of the new tuple's Element7</typeparam>
            <param name="t9">Value of the new tuple's Element7</param>
            <typeparam name="T10">Type of the new tuple's Element8</typeparam>
            <param name="t10">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 3 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 3 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 4 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 4 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 5 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 5 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 6 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 6 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Append``8(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element3</typeparam>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 8 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 3 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 3 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 4 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 5 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 6 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <typeparam name="T9">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Prepend``8(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T3">Type of the new tuple's Element1</typeparam>
            <typeparam name="T4">Type of the new tuple's Element2</typeparam>
            <typeparam name="T5">Type of the new tuple's Element3</typeparam>
            <typeparam name="T6">Type of the new tuple's Element4</typeparam>
            <typeparam name="T7">Type of the new tuple's Element5</typeparam>
            <typeparam name="T8">Type of the new tuple's Element6</typeparam>
            <typeparam name="T9">Type of the new tuple's Element7</typeparam>
            <typeparam name="T10">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 8 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.Equals(System.Tuples.Tuple{`0,`1})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 2 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.CompareTo(System.Tuples.Tuple{`0,`1})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.op_Equality(System.Tuples.Tuple{`0,`1},System.Tuples.Tuple{`0,`1})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`2.op_Inequality(System.Tuples.Tuple{`0,`1},System.Tuples.Tuple{`0,`1})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`2.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`2.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`2.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`3">
            <summary>
            Represents a tuple of length 3
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`3.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`3.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`3.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`3.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``1(``0)">
            <summary>
            Creates a new tuple of length 4 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 4 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 5 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 5 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 6 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 6 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="t4">Value of the new tuple's Element4</param>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 4 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 5 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 6 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="t6">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="t6">Value of the new tuple's Element3</param>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <param name="t7">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="t6">Value of the new tuple's Element3</param>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <param name="t7">Value of the new tuple's Element4</param>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <param name="t8">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="t6">Value of the new tuple's Element3</param>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <param name="t7">Value of the new tuple's Element4</param>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <param name="t8">Value of the new tuple's Element5</param>
            <typeparam name="T9">Type of the new tuple's Element6</typeparam>
            <param name="t9">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="t4">Value of the new tuple's Element1</param>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="t5">Value of the new tuple's Element2</param>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="t6">Value of the new tuple's Element3</param>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <param name="t7">Value of the new tuple's Element4</param>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <param name="t8">Value of the new tuple's Element5</param>
            <typeparam name="T9">Type of the new tuple's Element6</typeparam>
            <param name="t9">Value of the new tuple's Element6</param>
            <typeparam name="T10">Type of the new tuple's Element7</typeparam>
            <param name="t10">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 4 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 4 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 5 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 5 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 6 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 6 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Append``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element4</typeparam>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 4 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 4 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 5 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 6 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <typeparam name="T9">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Prepend``7(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T4">Type of the new tuple's Element1</typeparam>
            <typeparam name="T5">Type of the new tuple's Element2</typeparam>
            <typeparam name="T6">Type of the new tuple's Element3</typeparam>
            <typeparam name="T7">Type of the new tuple's Element4</typeparam>
            <typeparam name="T8">Type of the new tuple's Element5</typeparam>
            <typeparam name="T9">Type of the new tuple's Element6</typeparam>
            <typeparam name="T10">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 7 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.Equals(System.Tuples.Tuple{`0,`1,`2})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 3 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.CompareTo(System.Tuples.Tuple{`0,`1,`2})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.op_Equality(System.Tuples.Tuple{`0,`1,`2},System.Tuples.Tuple{`0,`1,`2})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`3.op_Inequality(System.Tuples.Tuple{`0,`1,`2},System.Tuples.Tuple{`0,`1,`2})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`3.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`3.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`3.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`4">
            <summary>
            Represents a tuple of length 4
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`4.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`4.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`4.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`4.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``1(``0)">
            <summary>
            Creates a new tuple of length 5 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 5 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 6 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 6 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="t5">Value of the new tuple's Element5</param>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 5 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 6 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="t6">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="t6">Value of the new tuple's Element2</param>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <param name="t7">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="t6">Value of the new tuple's Element2</param>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <param name="t7">Value of the new tuple's Element3</param>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <param name="t8">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="t6">Value of the new tuple's Element2</param>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <param name="t7">Value of the new tuple's Element3</param>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <param name="t8">Value of the new tuple's Element4</param>
            <typeparam name="T9">Type of the new tuple's Element5</typeparam>
            <param name="t9">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="t5">Value of the new tuple's Element1</param>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="t6">Value of the new tuple's Element2</param>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <param name="t7">Value of the new tuple's Element3</param>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <param name="t8">Value of the new tuple's Element4</param>
            <typeparam name="T9">Type of the new tuple's Element5</typeparam>
            <param name="t9">Value of the new tuple's Element5</param>
            <typeparam name="T10">Type of the new tuple's Element6</typeparam>
            <param name="t10">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 5 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 5 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 6 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 6 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Append``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element5</typeparam>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 5 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 5 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 6 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <typeparam name="T9">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Prepend``6(System.Tuples.Tuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T5">Type of the new tuple's Element1</typeparam>
            <typeparam name="T6">Type of the new tuple's Element2</typeparam>
            <typeparam name="T7">Type of the new tuple's Element3</typeparam>
            <typeparam name="T8">Type of the new tuple's Element4</typeparam>
            <typeparam name="T9">Type of the new tuple's Element5</typeparam>
            <typeparam name="T10">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 6 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.Equals(System.Tuples.Tuple{`0,`1,`2,`3})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 4 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`4.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3},System.Tuples.Tuple{`0,`1,`2,`3})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`4.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3},System.Tuples.Tuple{`0,`1,`2,`3})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`4.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`4.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`4.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`5">
            <summary>
            Represents a tuple of length 5
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``1(``0)">
            <summary>
            Creates a new tuple of length 6 with the values passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <returns>A new tuple of length 6 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="t6">Value of the new tuple's Element6</param>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 6 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="t6">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="t6">Value of the new tuple's Element1</param>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <param name="t7">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="t6">Value of the new tuple's Element1</param>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <param name="t7">Value of the new tuple's Element2</param>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <param name="t8">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="t6">Value of the new tuple's Element1</param>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <param name="t7">Value of the new tuple's Element2</param>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <param name="t8">Value of the new tuple's Element3</param>
            <typeparam name="T9">Type of the new tuple's Element4</typeparam>
            <param name="t9">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="t6">Value of the new tuple's Element1</param>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <param name="t7">Value of the new tuple's Element2</param>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <param name="t8">Value of the new tuple's Element3</param>
            <typeparam name="T9">Type of the new tuple's Element4</typeparam>
            <param name="t9">Value of the new tuple's Element4</param>
            <typeparam name="T10">Type of the new tuple's Element5</typeparam>
            <param name="t10">Value of the new tuple's Element5</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 6 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 6 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Append``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element6</typeparam>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 6 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 6 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <typeparam name="T9">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Prepend``5(System.Tuples.Tuple{``0,``1,``2,``3,``4})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T6">Type of the new tuple's Element1</typeparam>
            <typeparam name="T7">Type of the new tuple's Element2</typeparam>
            <typeparam name="T8">Type of the new tuple's Element3</typeparam>
            <typeparam name="T9">Type of the new tuple's Element4</typeparam>
            <typeparam name="T10">Type of the new tuple's Element5</typeparam>
            <param name="pOther">Tuple of length 5 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 5 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`5.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4},System.Tuples.Tuple{`0,`1,`2,`3,`4})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`5.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4},System.Tuples.Tuple{`0,`1,`2,`3,`4})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`5.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`5.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`5.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`6">
            <summary>
            Represents a tuple of length 6
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
            <typeparam name="T6">Type of the tuple's Element6</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Tuple constructor. The first 6 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``1(``0)">
            <summary>
            Creates a new tuple of length 7 with the values passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <returns>A new tuple of length 7 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="t7">Value of the new tuple's Element7</param>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 7 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <param name="t7">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <param name="t7">Value of the new tuple's Element1</param>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <param name="t8">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <param name="t7">Value of the new tuple's Element1</param>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <param name="t8">Value of the new tuple's Element2</param>
            <typeparam name="T9">Type of the new tuple's Element3</typeparam>
            <param name="t9">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <param name="t7">Value of the new tuple's Element1</param>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <param name="t8">Value of the new tuple's Element2</param>
            <typeparam name="T9">Type of the new tuple's Element3</typeparam>
            <param name="t9">Value of the new tuple's Element3</param>
            <typeparam name="T10">Type of the new tuple's Element4</typeparam>
            <param name="t10">Value of the new tuple's Element4</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 7 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 7 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Append``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element7</typeparam>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 7 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 7 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <typeparam name="T9">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Prepend``4(System.Tuples.Tuple{``0,``1,``2,``3})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T7">Type of the new tuple's Element1</typeparam>
            <typeparam name="T8">Type of the new tuple's Element2</typeparam>
            <typeparam name="T9">Type of the new tuple's Element3</typeparam>
            <typeparam name="T10">Type of the new tuple's Element4</typeparam>
            <param name="pOther">Tuple of length 4 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 6 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`6.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`6.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`6.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Element6">
            <summary>
            Gets the element of the tuple at position 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Sixth">
            <summary>
            Gets or sets the sixth element of
            the tuple. Same as using Element6. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`6.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`7">
            <summary>
            Represents a tuple of length 7
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
            <typeparam name="T6">Type of the tuple's Element6</typeparam>
            <typeparam name="T7">Type of the tuple's Element7</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Tuple constructor. The first 6 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Tuple constructor. The first 7 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``1(``0)">
            <summary>
            Creates a new tuple of length 8 with the values passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <returns>A new tuple of length 8 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="t8">Value of the new tuple's Element8</param>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 8 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <param name="t8">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <param name="t8">Value of the new tuple's Element1</param>
            <typeparam name="T9">Type of the new tuple's Element2</typeparam>
            <param name="t9">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``3(``0,``1,``2)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <param name="t8">Value of the new tuple's Element1</param>
            <typeparam name="T9">Type of the new tuple's Element2</typeparam>
            <param name="t9">Value of the new tuple's Element2</param>
            <typeparam name="T10">Type of the new tuple's Element3</typeparam>
            <param name="t10">Value of the new tuple's Element3</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 8 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 8 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Append``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element8</typeparam>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 8 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 8 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <typeparam name="T9">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Prepend``3(System.Tuples.Tuple{``0,``1,``2})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T8">Type of the new tuple's Element1</typeparam>
            <typeparam name="T9">Type of the new tuple's Element2</typeparam>
            <typeparam name="T10">Type of the new tuple's Element3</typeparam>
            <param name="pOther">Tuple of length 3 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 7 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`7.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`7.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`7.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 7.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element6">
            <summary>
            Gets the element of the tuple at position 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Element7">
            <summary>
            Gets the element of the tuple at position 7.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Sixth">
            <summary>
            Gets or sets the sixth element of
            the tuple. Same as using Element6. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Seventh">
            <summary>
            Gets or sets the seventh element of
            the tuple. Same as using Element7. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`7.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`8">
            <summary>
            Represents a tuple of length 8
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
            <typeparam name="T6">Type of the tuple's Element6</typeparam>
            <typeparam name="T7">Type of the tuple's Element7</typeparam>
            <typeparam name="T8">Type of the tuple's Element8</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Tuple constructor. The first 6 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Tuple constructor. The first 7 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Tuple constructor. The first 8 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.Append``1(``0)">
            <summary>
            Creates a new tuple of length 9 with the values passed in appended to the end.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <returns>A new tuple of length 9 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Append``2(``0,``1)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="t9">Value of the new tuple's Element9</param>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 9 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element1</typeparam>
            <param name="t9">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Prepend``2(``0,``1)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element1</typeparam>
            <param name="t9">Value of the new tuple's Element1</param>
            <typeparam name="T10">Type of the new tuple's Element2</typeparam>
            <param name="t10">Value of the new tuple's Element2</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 9 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 9 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Append``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element9</typeparam>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 9 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 9 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Prepend``2(System.Tuples.Tuple{``0,``1})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T9">Type of the new tuple's Element1</typeparam>
            <typeparam name="T10">Type of the new tuple's Element2</typeparam>
            <param name="pOther">Tuple of length 2 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 8 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`8.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`8.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`8.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 8.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element6">
            <summary>
            Gets the element of the tuple at position 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element7">
            <summary>
            Gets the element of the tuple at position 7.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Element8">
            <summary>
            Gets the element of the tuple at position 8.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Sixth">
            <summary>
            Gets or sets the sixth element of
            the tuple. Same as using Element6. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Seventh">
            <summary>
            Gets or sets the seventh element of
            the tuple. Same as using Element7. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Eight">
            <summary>
            Gets or sets the eight element of
            the tuple. Same as using Element8. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`8.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`9">
            <summary>
            Represents a tuple of length 9
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
            <typeparam name="T6">Type of the tuple's Element6</typeparam>
            <typeparam name="T7">Type of the tuple's Element7</typeparam>
            <typeparam name="T8">Type of the tuple's Element8</typeparam>
            <typeparam name="T9">Type of the tuple's Element9</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Tuple constructor. The first 6 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Tuple constructor. The first 7 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Tuple constructor. The first 8 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Tuple constructor. The first 9 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
            <param name="t9">Value of the tuple's Element9</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.Append``1(``0)">
            <summary>
            Creates a new tuple of length 10 with the values passed in appended to the end.
            </summary>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="t10">Value of the new tuple's Element10</param>
            <returns>A new tuple of length 10 with the passed in elements added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.Prepend``1(``0)">
            <summary>
            Creates a new tuple of length 10 with the values passed in prepended to the beginning.
            </summary>
            <typeparam name="T10">Type of the new tuple's Element1</typeparam>
            <param name="t10">Value of the new tuple's Element1</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.Append``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 10 with the values of the tuple passed in appended to the end.
            </summary>
            <typeparam name="T10">Type of the new tuple's Element10</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be appended.</param>
            <returns>A new tuple of length 10 with the elements of the tuple passed in added at the end.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.Prepend``1(System.Tuples.Tuple{``0})">
            <summary>
            Creates a new tuple of length 10 with the values passed from the tuple in prepended to the beginning.
            </summary>
            <typeparam name="T10">Type of the new tuple's Element1</typeparam>
            <param name="pOther">Tuple of length 1 containing the elements to be prepended.</param>
            <returns>A new tuple of length 10 with the passed in elements added at the beginning.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 9 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`9.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`9.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`9.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 9.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element6">
            <summary>
            Gets the element of the tuple at position 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element7">
            <summary>
            Gets the element of the tuple at position 7.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element8">
            <summary>
            Gets the element of the tuple at position 8.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Element9">
            <summary>
            Gets the element of the tuple at position 9.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Sixth">
            <summary>
            Gets or sets the sixth element of
            the tuple. Same as using Element6. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Seventh">
            <summary>
            Gets or sets the seventh element of
            the tuple. Same as using Element7. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Eight">
            <summary>
            Gets or sets the eight element of
            the tuple. Same as using Element8. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Ninth">
            <summary>
            Gets or sets the ninth element of
            the tuple. Same as using Element9. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`9.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
        <member name="T:System.Tuples.Tuple`10">
            <summary>
            Represents a tuple of length 10
            </summary>
            <typeparam name="T1">Type of the tuple's Element1</typeparam>
            <typeparam name="T2">Type of the tuple's Element2</typeparam>
            <typeparam name="T3">Type of the tuple's Element3</typeparam>
            <typeparam name="T4">Type of the tuple's Element4</typeparam>
            <typeparam name="T5">Type of the tuple's Element5</typeparam>
            <typeparam name="T6">Type of the tuple's Element6</typeparam>
            <typeparam name="T7">Type of the tuple's Element7</typeparam>
            <typeparam name="T8">Type of the tuple's Element8</typeparam>
            <typeparam name="T9">Type of the tuple's Element9</typeparam>
            <typeparam name="T10">Type of the tuple's Element10</typeparam>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor">
            <summary>
            An empty tuple constructor. All elements will have their default values.
            </summary>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0)">
            <summary>
            Tuple constructor. The first 1 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1)">
            <summary>
            Tuple constructor. The first 2 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2)">
            <summary>
            Tuple constructor. The first 3 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3)">
            <summary>
            Tuple constructor. The first 4 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Tuple constructor. The first 5 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Tuple constructor. The first 6 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Tuple constructor. The first 7 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Tuple constructor. The first 8 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Tuple constructor. The first 9 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
            <param name="t9">Value of the tuple's Element9</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Tuple constructor. The first 10 elements will be assigned the values passed in.
            </summary>
            <param name="t1">Value of the tuple's Element1</param>
            <param name="t2">Value of the tuple's Element2</param>
            <param name="t3">Value of the tuple's Element3</param>
            <param name="t4">Value of the tuple's Element4</param>
            <param name="t5">Value of the tuple's Element5</param>
            <param name="t6">Value of the tuple's Element6</param>
            <param name="t7">Value of the tuple's Element7</param>
            <param name="t8">Value of the tuple's Element8</param>
            <param name="t9">Value of the tuple's Element9</param>
            <param name="t10">Value of the tuple's Element10</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.Equals(System.Object)">
            <summary>
            Returns a value indicating weather this instance is equal to another instance.
            </summary>
            <param name="pObj">The object we wish to compare with this instance.</param>
            <returns>A value indicating if this object is equal to the one passed in.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.ToString">
            <summary>
            Converts the tuple to a string. This will be a comma separated list
            of the string values of the elements enclosed in brackets.
            </summary>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.ToString(System.String)">
            <summary>
            Returns a string representation of the tuple using the specified format.
            </summary>
            <param name="pFormat">The format to use for the string representation.</param>
            <returns>A string representation of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.Equals(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})">
            <summary>
            A value indicating if this tuple is equal to a tuple
            of the same length and type. This will be so if all members are
            equal.
            </summary>
            <returns>A value indicating weather this tuple is equal to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this tuple to an Array.
            The array should have at least 10 elements available
            after the index parameter.
            </summary>
            <param name="pArray">The array to copy the values to.</param>
            <param name="pIndex">The offset in the array at which to start inserting the values.</param>
        </member>
        <member name="M:System.Tuples.Tuple`10.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.GetEnumerator">
            <summary>
            Returns an enumerator to this tuple.
            </summary>
            <returns>An enumerator of the elements of the tuple.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.CompareTo(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})">
            <summary>
            Returns a value indicating the order of this tuple compared
            to another tuple of the same length and type. The order is defined
            as the order of the first element of the tuples.
            </summary>
            <param name="pOther">The tuple we are comparing this one to.</param>
            <returns>value indicating the order of this tuple compared to another tuple of the same length and type.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.op_Equality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})">
            <summary>
            Compares two tuples and returns a value indicating if they are equal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are equal.</returns>
        </member>
        <member name="M:System.Tuples.Tuple`10.op_Inequality(System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Tuples.Tuple{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})">
            <summary>
            Compares two tuples and returns a value indicating if they are unequal.
            </summary>
            <param name="pA">A tuple to compare.</param>
            <param name="pB">A tuple to compare.</param>
            <returns>A value indicating if the two tuples are unequal.</returns>
        </member>
        <member name="P:System.Tuples.Tuple`10.System#Collections#ICollection#Count">
            <summary>
            Gets the length of the tuple, that is it returns 10.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Item(System.Int32)">
            <summary>
            Get or sets the value of the element at
            the specified index in the tuple.
            </summary>
            <param name="pIndex">The index of the element in the tuple.</param>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element1">
            <summary>
            Gets the element of the tuple at position 1.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element2">
            <summary>
            Gets the element of the tuple at position 2.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element3">
            <summary>
            Gets the element of the tuple at position 3.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element4">
            <summary>
            Gets the element of the tuple at position 4.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element5">
            <summary>
            Gets the element of the tuple at position 5.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element6">
            <summary>
            Gets the element of the tuple at position 6.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element7">
            <summary>
            Gets the element of the tuple at position 7.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element8">
            <summary>
            Gets the element of the tuple at position 8.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element9">
            <summary>
            Gets the element of the tuple at position 9.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Element10">
            <summary>
            Gets the element of the tuple at position 10.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.First">
            <summary>
            Gets or sets the first element of
            the tuple. Same as using Element1. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Second">
            <summary>
            Gets or sets the second element of
            the tuple. Same as using Element2. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Third">
            <summary>
            Gets or sets the third element of
            the tuple. Same as using Element3. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Fourth">
            <summary>
            Gets or sets the fourth element of
            the tuple. Same as using Element4. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Fifth">
            <summary>
            Gets or sets the fifth element of
            the tuple. Same as using Element5. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Sixth">
            <summary>
            Gets or sets the sixth element of
            the tuple. Same as using Element6. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Seventh">
            <summary>
            Gets or sets the seventh element of
            the tuple. Same as using Element7. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Eight">
            <summary>
            Gets or sets the eight element of
            the tuple. Same as using Element8. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Ninth">
            <summary>
            Gets or sets the ninth element of
            the tuple. Same as using Element9. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Tenth">
            <summary>
            Gets or sets the tenth element of
            the tuple. Same as using Element10. Only added for
            syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Head">
            <summary>
            Gets or sets the head of the tuple, that is the first element.
            Same as using the properties Element1 or First. Only Added
            for syntax reasons.
            </summary>
        </member>
        <member name="P:System.Tuples.Tuple`10.Tail">
            <summary>
            Gets the tail of the tuple, that is, all elements
            except the first one. This property actually returns a completely
            new tuple so be careful about that as changing the tail
            not change the original tuple.
            </summary>
        </member>
    </members>
</doc>
